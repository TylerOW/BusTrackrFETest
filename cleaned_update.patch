 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/app/src/main/java/com/example/bustrackingapp/feature_bus_routes/presentation/bus_routes/BusRoutesScreen.kt b/app/src/main/java/com/example/bustrackingapp/feature_bus_routes/presentation/bus_routes/BusRoutesScreen.kt
index c9bb8dc45d9c55bdc637804803e884267f7ffbb2..6b79a61576300ad2a4cdb3a676892467ef24f49a 100644
--- a/app/src/main/java/com/example/bustrackingapp/feature_bus_routes/presentation/bus_routes/BusRoutesScreen.kt
+++ b/app/src/main/java/com/example/bustrackingapp/feature_bus_routes/presentation/bus_routes/BusRoutesScreen.kt
@@ -1,49 +1,46 @@
 package com.example.bustrackingapp.feature_bus_routes.presentation.bus_routes
 
-import androidx.compose.foundation.Image
 import androidx.compose.foundation.clickable
 import androidx.compose.foundation.interaction.MutableInteractionSource
 import androidx.compose.foundation.layout.*
 import androidx.compose.foundation.lazy.LazyColumn
 import androidx.compose.foundation.lazy.itemsIndexed
 import androidx.compose.material3.*
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.LaunchedEffect
 import androidx.compose.runtime.remember
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.platform.LocalFocusManager
-import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.unit.dp
-import androidx.compose.ui.layout.ContentScale
 import androidx.hilt.navigation.compose.hiltViewModel
-import com.example.bustrackingapp.R
 import com.example.bustrackingapp.core.presentation.components.CustomLoadingIndicator
 import com.example.bustrackingapp.core.util.LoggerUtil
 import com.example.bustrackingapp.feature_bus_routes.domain.models.BusRouteWithStops
 import com.example.bustrackingapp.feature_bus_routes.presentation.components.BusRouteTile
+import com.example.bustrackingapp.feature_bus_routes.presentation.components.ZoomableShuttleMap
 import com.example.bustrackingapp.ui.theme.Blue500
 import com.example.bustrackingapp.ui.theme.NavyBlue300
 import com.example.bustrackingapp.ui.theme.Red400
 import com.example.bustrackingapp.ui.theme.White
 import com.google.accompanist.swiperefresh.SwipeRefresh
 import com.google.accompanist.swiperefresh.rememberSwipeRefreshState
 
 @OptIn(ExperimentalMaterial3Api::class)
 @Composable
 fun BusRoutesScreen(
     busRoutesViewModel : BusRoutesViewModel = hiltViewModel(),
     snackbarState : SnackbarHostState = remember {
         SnackbarHostState()
     },
     onRouteItemClick : (String)->Unit
 ){
     val focusManager = LocalFocusManager.current
     val logger = LoggerUtil(c = "BusRoutesScreen")
     LaunchedEffect(key1 = busRoutesViewModel.uiState.error){
         logger.info("Show Snackbar")
 
         if(busRoutesViewModel.uiState.error!=null){
             snackbarState.showSnackbar(busRoutesViewModel.uiState.error!!)
         }
     }
@@ -150,58 +147,55 @@ private fun ShuttleRulesInfo(modifier: Modifier = Modifier) {
             style = MaterialTheme.typography.bodySmall
         )
         Spacer(modifier = Modifier.height(12.dp))
 
         Text(
             text = "The shuttle service is completely free of charge.",
             style = MaterialTheme.typography.bodyMedium
         )
     }
 }
 
 @Composable
 private fun BusRouteList(
     busRoutes: () -> List<BusRouteWithStops>,
     isLoading: () -> Boolean,
     isRefreshing: () -> Boolean,
     onRefresh: (isLoading: Boolean, isRefreshing: Boolean) -> Unit,
     onRouteItemClick: (String) -> Unit
 ){
     if(isLoading()){
         return CustomLoadingIndicator()
     }
 
     Column {
         ShuttleRulesInfo(modifier = Modifier.padding(horizontal = 8.dp))
-        Image(
-            painter = painterResource(id = R.drawable.shuttlemapdone),
-            contentDescription = "UNITEN Shuttle Route Map",
+        ZoomableShuttleMap(
             modifier = Modifier
                 .fillMaxWidth()
                 .padding(horizontal = 8.dp)
-                .align(Alignment.CenterHorizontally),
-            contentScale = ContentScale.FillWidth
+                .align(Alignment.CenterHorizontally)
         )
 
         SwipeRefresh(
             state = rememberSwipeRefreshState(isRefreshing = isRefreshing()),
             onRefresh = { onRefresh(false, true) },
         ) {
             LazyColumn(
                 content = {
                     itemsIndexed(busRoutes()) { index, item ->
                         if (index == 0) {
                             Divider(color = NavyBlue300)
                         }
                         BusRouteTile(
                             routeNo = item.routeNo,
                             routeName = item.name,
                             totalStops = item.stops.size,
                             onClick = { onRouteItemClick(item.routeNo) }
                         )
                         Divider(color = NavyBlue300)
                     }
                 },
                 contentPadding = PaddingValues(8.dp)
             )
         }
     }
diff --git a/app/src/main/java/com/example/bustrackingapp/feature_bus_routes/presentation/components/ZoomableShuttleMap.kt b/app/src/main/java/com/example/bustrackingapp/feature_bus_routes/presentation/components/ZoomableShuttleMap.kt
new file mode 100644
index 0000000000000000000000000000000000000000..0466b514dccc9033a8aa63d5e9571e011e7e25f4
--- /dev/null
+++ b/app/src/main/java/com/example/bustrackingapp/feature_bus_routes/presentation/components/ZoomableShuttleMap.kt
@@ -0,0 +1,67 @@
+package com.example.bustrackingapp.feature_bus_routes.presentation.components
+
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.gestures.detectTransformGestures
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.geometry.Offset
+import androidx.compose.ui.graphics.graphicsLayer
+import androidx.compose.ui.input.pointer.pointerInput
+import androidx.compose.ui.layout.ContentScale
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.window.Dialog
+import com.example.bustrackingapp.R
+
+@Composable
+fun ZoomableShuttleMap(modifier: Modifier = Modifier) {
+    var scale by remember { mutableStateOf(1f) }
+    var offset by remember { mutableStateOf(Offset.Zero) }
+    var showDialog by remember { mutableStateOf(false) }
+
+    Box(modifier = modifier.clickable { showDialog = true }) {
+        Image(
+            painter = painterResource(id = R.drawable.shuttle_map_done),
+            contentDescription = "UNITEN Shuttle Route Map",
+            modifier = Modifier.fillMaxWidth(),
+            contentScale = ContentScale.FillWidth
+        )
+    }
+
+    if (showDialog) {
+        Dialog(onDismissRequest = { showDialog = false }) {
+            Box(
+                modifier = Modifier
+                    .fillMaxSize()
+                    .pointerInput(Unit) {
+                        detectTransformGestures { _, pan, zoom, _ ->
+                            scale = (scale * zoom).coerceIn(1f, 5f)
+                            offset += pan
+                        }
+                    },
+                contentAlignment = Alignment.Center
+            ) {
+                Image(
+                    painter = painterResource(id = R.drawable.shuttle_map_done),
+                    contentDescription = "UNITEN Shuttle Route Map",
+                    contentScale = ContentScale.Fit,
+                    modifier = Modifier
+                        .graphicsLayer(
+                            scaleX = scale,
+                            scaleY = scale,
+                            translationX = offset.x,
+                            translationY = offset.y
+                        )
+                )
+            }
+        }
+    }
+}
